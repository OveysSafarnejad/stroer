version: '3.9'

services:
  db:
    image: postgres:14-alpine
    container_name: stroer-db
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    command: -p ${DB_PORT}
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'" ]
      interval: 3s
      timeout: 1s
      retries: 10

  redis:
    container_name: stroer-redis
    image: redis:6.2-alpine
    command: >
      --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis:/var/lib/redis/data
    env_file:
      - .env

  app:
    container_name: stroer-app
    build:
      context: .
      dockerfile: ./docker/app/Dockerfile
    volumes:
      - ./src:/app/src
      - static_data:/app/vol/web/
    healthcheck:
      test: [ "CMD", "python", "manage.py", "wait_for_migrations" ]
      interval: 5s
      timeout: 5s
      retries: 3
    env_file:
      - .env
    depends_on:
      - db
      - redis

  proxy:
    container_name: stroer-nginx
    build:
      context: ./proxy
    restart: always
    depends_on:
      - app
    ports:
      - ${LISTEN_PORT}:${LISTEN_PORT}
    volumes:
      - static_data:/app/vol/web
    env_file:
      - .env

  celery_worker:
    container_name: stroer-celery-worker
    build:
      context: .
      dockerfile: ./docker/app/Dockerfile
    command: celery -A stroer.celery_conf.celery worker --loglevel=info
    volumes:
      - ./src:/app/src
    depends_on:
      - app
      - redis
    env_file:
      - .env

  celery_beat:
    container_name: stroer-celery-beat
    build:
      context: .
      dockerfile: ./docker/app/Dockerfile
    command: celery -A stroer.celery_conf.celery beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - ./src:/app/src
    depends_on:
      redis:
        condition: service_started
      celery_worker:
        condition: service_started
      app:
        condition: service_healthy
    env_file:
      - .env

  flower:
    container_name: stroer-flower
    build:
      context: .
      dockerfile: ./docker/app/Dockerfile
    command: celery -A stroer.celery_conf.celery flower --port=5555
    volumes:
      - ./src:/app/src
    ports:
      - ${FLOWER_PORT}:5555
    depends_on:
      - app
      - redis
      - celery_worker
    env_file:
      - .env

volumes:
  postgres_data:
  static_data:
  redis:
